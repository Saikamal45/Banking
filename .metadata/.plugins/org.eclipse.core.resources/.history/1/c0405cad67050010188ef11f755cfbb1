package com.banking.User_Service.entity.serviceImplementation;

import java.util.HashSet;
import java.util.Set;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Service;

import com.banking.User_Service.Service.UserService;
import com.banking.User_Service.entity.Role;
import com.banking.User_Service.entity.User;
import com.banking.User_Service.exception.RoleNotFound;
import com.banking.User_Service.repo.RoleRepository;
import com.banking.User_Service.repo.UserRepository;

@Service
public class UserServiceImpl implements UserService{

	@Autowired
	private RoleRepository roleRepository;
	
	@Autowired
	private UserRepository userRepository;
	
	private BCryptPasswordEncoder bCryptPasswordEncoder=new BCryptPasswordEncoder(12);
	@Override
	public void addRoles() {
		Role admin=new Role();
		admin.setRoleName("Admin");
		roleRepository.save(admin);
		
		Role customer=new Role();
		customer.setRoleName("Customer");
		roleRepository.save(customer);
	}

	@Override
	public User addUser(String role, User user) throws RoleNotFound {
		Role role2 = roleRepository.findById(role).orElseThrow(()-> new RoleNotFound("Role Not Found with role :"+role));
		Set<Role> roles=new HashSet<Role>();
		roles.add(role2);
		user.setRoles(roles);
		String encodedPassword = bCryptPasswordEncoder.encode(user.getPassword());
		user.setPassword(encodedPassword);
		return userRepository.save(user);
	}

}
